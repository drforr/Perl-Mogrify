## name blocks in void
## parms {}
## failures 0
## cut
map {$_++} @x;
map {$_++} @x, @y;
map {$_++} ();
grep {$_++} @x;
grep {$_++} @x, @y;
grep {$_++} ();
#-->
map {$_++}, @x;
map {$_++}, @x, @y;
map {$_++}, ();
grep {$_++}, @x;
grep {$_++}, @x, @y;
grep {$_++}, ();
## name blocks in expression
## parms {}
## failures 0
## cut
my @y = map {$_++} @x;
my @y = map {$_++} @x, @y;
my @y = map {$_++} ();
my @y = grep {$_++} @x;
my @y = grep {$_++} @x, @y;
my @y = grep {$_++} ();
#-->
my @y = map {$_++}, @x;
my @y = map {$_++}, @x, @y;
my @y = map {$_++}, ();
my @y = grep {$_++}, @x;
my @y = grep {$_++}, @x, @y;
my @y = grep {$_++}, ();
## name compound blocks in expression
## parms {}
## failures 0
## cut
my @y = map {$_++,1;3} @x;
my @y = map {$_++,1;3} @x, @y;
my @y = map {$_++,1;3} ();
my @y = grep {$_++,1;3} @x;
my @y = grep {$_++,1;3} @x, @y;
my @y = grep {$_++,1;3} ();
#-->
my @y = map {$_++,1;3}, @x;
my @y = map {$_++,1;3}, @x, @y;
my @y = map {$_++,1;3}, ();
my @y = grep {$_++,1;3}, @x;
my @y = grep {$_++,1;3}, @x, @y;
my @y = grep {$_++,1;3}, ();
## name multiple expressions
## parms {}
## failures 0
## cut
map { } grep { } @a;
map { } grep { } ();
#-->
map { }, grep { }, @a;
map { }, grep { }, ();
## name transform
## parms {}
## failures 0
## cut
map /x/, @x;
map /x/, @x, @y;
map /x/, ();
map /x/, (), ();
my @b = map /x/, @x;
grep /x/, @x;
grep !!$x, @x;
grep !!$x, ();
my @d = grep /x/, @x;
#-->
map {/x/}, @x;
map {/x/}, @x, @y;
map {/x/}, ();
map {/x/}, (), ();
my @b = map {/x/}, @x;
grep {/x/}, @x;
grep {!!$x}, @x;
grep {!!$x}, ();
my @d = grep {/x/}, @x;
